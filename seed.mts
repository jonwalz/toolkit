import { SnapletClient } from "@snaplet/seed";

// You can use @snaplet/copycat to generate fake data for a field, for example:
// ```
// await snaplet.users([{ email: ({ seed }) => copycat.email(seed) }])
// ```
// More on this in our docs: https://docs.snaplet.dev/core-concepts/seed#inside-the-snapletseed-workflow
// import { copycat } from '@snaplet/copycat'

// This is a basic example generated by Snaplet to start you off, check out the docs for where to go from here
// * For more on getting started with @snaplet/seed: https://docs.snaplet.dev/getting-started/quick-start/seed
// * For a more detailed reference: https://docs.snaplet.dev/core-concepts/seed

const snaplet = new SnapletClient({
  dryRun: process.env.DRY !== "0",
});

// create 10 users
await snaplet.users((x) => x(10));

// Clears all existing data in the database, but keep the structure
await snaplet.$resetDatabase();

await snaplet.progress((x) => x(3));
